<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.example.demo.dao.TestMonitorMapper" >
  <resultMap id="BaseResultMap" type="com.example.demo.model.TestMonitor" >
    <id column="monitor_id" property="monitorId" jdbcType="BIGINT" />
    <result column="server_type" property="serverType" jdbcType="INTEGER" />
    <result column="ip" property="ip" jdbcType="VARCHAR" />
    <result column="cpu_usage" property="cpuUsage" jdbcType="DOUBLE" />
    <result column="memory_usage" property="memoryUsage" jdbcType="DOUBLE" />
    <result column="iops" property="iops" jdbcType="DOUBLE" />
    <result column="create_time" property="createTime" jdbcType="BIGINT" />
  </resultMap>
  <sql id="Base_Column_List" >
    monitor_id, server_type, ip, cpu_usage, memory_usage, iops, create_time
  </sql>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Long" >
    select 
    <include refid="Base_Column_List" />
    from t_monitor
    where monitor_id = #{monitorId,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long" >
    delete from t_monitor
    where monitor_id = #{monitorId,jdbcType=BIGINT}
  </delete>
  <insert id="insert" parameterType="com.example.demo.model.TestMonitor" >
    insert into t_monitor (monitor_id, server_type, ip, 
      cpu_usage, memory_usage, iops, 
      create_time)
    values (#{monitorId,jdbcType=BIGINT}, #{serverType,jdbcType=INTEGER}, #{ip,jdbcType=VARCHAR}, 
      #{cpuUsage,jdbcType=DOUBLE}, #{memoryUsage,jdbcType=DOUBLE}, #{iops,jdbcType=DOUBLE}, 
      #{createTime,jdbcType=BIGINT})
  </insert>
  <insert id="insertSelective" parameterType="com.example.demo.model.TestMonitor" >
    insert into t_monitor
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="monitorId != null" >
        monitor_id,
      </if>
      <if test="serverType != null" >
        server_type,
      </if>
      <if test="ip != null" >
        ip,
      </if>
      <if test="cpuUsage != null" >
        cpu_usage,
      </if>
      <if test="memoryUsage != null" >
        memory_usage,
      </if>
      <if test="iops != null" >
        iops,
      </if>
      <if test="createTime != null" >
        create_time,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="monitorId != null" >
        #{monitorId,jdbcType=BIGINT},
      </if>
      <if test="serverType != null" >
        #{serverType,jdbcType=INTEGER},
      </if>
      <if test="ip != null" >
        #{ip,jdbcType=VARCHAR},
      </if>
      <if test="cpuUsage != null" >
        #{cpuUsage,jdbcType=DOUBLE},
      </if>
      <if test="memoryUsage != null" >
        #{memoryUsage,jdbcType=DOUBLE},
      </if>
      <if test="iops != null" >
        #{iops,jdbcType=DOUBLE},
      </if>
      <if test="createTime != null" >
        #{createTime,jdbcType=BIGINT},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.example.demo.model.TestMonitor" >
    update t_monitor
    <set >
      <if test="serverType != null" >
        server_type = #{serverType,jdbcType=INTEGER},
      </if>
      <if test="ip != null" >
        ip = #{ip,jdbcType=VARCHAR},
      </if>
      <if test="cpuUsage != null" >
        cpu_usage = #{cpuUsage,jdbcType=DOUBLE},
      </if>
      <if test="memoryUsage != null" >
        memory_usage = #{memoryUsage,jdbcType=DOUBLE},
      </if>
      <if test="iops != null" >
        iops = #{iops,jdbcType=DOUBLE},
      </if>
      <if test="createTime != null" >
        create_time = #{createTime,jdbcType=BIGINT},
      </if>
    </set>
    where monitor_id = #{monitorId,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.example.demo.model.TestMonitor" >
    update t_monitor
    set server_type = #{serverType,jdbcType=INTEGER},
      ip = #{ip,jdbcType=VARCHAR},
      cpu_usage = #{cpuUsage,jdbcType=DOUBLE},
      memory_usage = #{memoryUsage,jdbcType=DOUBLE},
      iops = #{iops,jdbcType=DOUBLE},
      create_time = #{createTime,jdbcType=BIGINT}
    where monitor_id = #{monitorId,jdbcType=BIGINT}
  </update>
</mapper>