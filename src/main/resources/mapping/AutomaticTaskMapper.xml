<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.example.demo.dao.AutomaticTaskMapper" >
  <resultMap id="BaseResultMap" type="com.example.demo.model.AutomaticTask" >
    <id column="automatic_task_id" property="automaticTaskId" jdbcType="INTEGER" />
    <id column="create_time" property="createTime" jdbcType="TIMESTAMP" />
    <result column="scene_id" property="sceneId" jdbcType="INTEGER" />
    <result column="scene_name" property="sceneName" jdbcType="VARCHAR" />
    <result column="start_time" property="startTime" jdbcType="TIMESTAMP" />
    <result column="pressure_times" property="pressureTimes" jdbcType="INTEGER" />
  </resultMap>
  <sql id="Base_Column_List" >
    automatic_task_id, create_time, scene_id, scene_name, start_time, pressure_times
  </sql>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="com.example.demo.model.AutomaticTaskKey" >
    select 
    <include refid="Base_Column_List" />
    from t_automatic_task
    where automatic_task_id = #{automaticTaskId,jdbcType=INTEGER}
      and create_time = #{createTime,jdbcType=TIMESTAMP}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="com.example.demo.model.AutomaticTaskKey" >
    delete from t_automatic_task
    where automatic_task_id = #{automaticTaskId,jdbcType=INTEGER}
      and create_time = #{createTime,jdbcType=TIMESTAMP}
  </delete>
  <insert id="insert" parameterType="com.example.demo.model.AutomaticTask" >
    insert into t_automatic_task (automatic_task_id, create_time, scene_id, 
      scene_name, start_time, pressure_times
      )
    values (#{automaticTaskId,jdbcType=INTEGER}, #{createTime,jdbcType=TIMESTAMP}, #{sceneId,jdbcType=INTEGER}, 
      #{sceneName,jdbcType=VARCHAR}, #{startTime,jdbcType=TIMESTAMP}, #{pressureTimes,jdbcType=INTEGER}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.example.demo.model.AutomaticTask" >
    insert into t_automatic_task
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="automaticTaskId != null" >
        automatic_task_id,
      </if>
      <if test="createTime != null" >
        create_time,
      </if>
      <if test="sceneId != null" >
        scene_id,
      </if>
      <if test="sceneName != null" >
        scene_name,
      </if>
      <if test="startTime != null" >
        start_time,
      </if>
      <if test="pressureTimes != null" >
        pressure_times,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="automaticTaskId != null" >
        #{automaticTaskId,jdbcType=INTEGER},
      </if>
      <if test="createTime != null" >
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="sceneId != null" >
        #{sceneId,jdbcType=INTEGER},
      </if>
      <if test="sceneName != null" >
        #{sceneName,jdbcType=VARCHAR},
      </if>
      <if test="startTime != null" >
        #{startTime,jdbcType=TIMESTAMP},
      </if>
      <if test="pressureTimes != null" >
        #{pressureTimes,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.example.demo.model.AutomaticTask" >
    update t_automatic_task
    <set >
      <if test="sceneId != null" >
        scene_id = #{sceneId,jdbcType=INTEGER},
      </if>
      <if test="sceneName != null" >
        scene_name = #{sceneName,jdbcType=VARCHAR},
      </if>
      <if test="startTime != null" >
        start_time = #{startTime,jdbcType=TIMESTAMP},
      </if>
      <if test="pressureTimes != null" >
        pressure_times = #{pressureTimes,jdbcType=INTEGER},
      </if>
    </set>
    where automatic_task_id = #{automaticTaskId,jdbcType=INTEGER}
      and create_time = #{createTime,jdbcType=TIMESTAMP}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.example.demo.model.AutomaticTask" >
    update t_automatic_task
    set scene_id = #{sceneId,jdbcType=INTEGER},
      scene_name = #{sceneName,jdbcType=VARCHAR},
      start_time = #{startTime,jdbcType=TIMESTAMP},
      pressure_times = #{pressureTimes,jdbcType=INTEGER}
    where automatic_task_id = #{automaticTaskId,jdbcType=INTEGER}
      and create_time = #{createTime,jdbcType=TIMESTAMP}
  </update>

  <select id="selectAllTask"  resultMap="BaseResultMap">
    select
    <include refid="Base_Column_List" />
    from t_automatic_task
  </select>

  <delete id="deleteByTaskId" parameterType="com.example.demo.model.AutomaticTask" >
    delete from t_automatic_task
    where automatic_task_id = #{automaticTaskId,jdbcType=INTEGER}
  </delete>
</mapper>