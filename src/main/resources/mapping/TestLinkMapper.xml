<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.example.demo.dao.TestLinkMapper" >
  <resultMap id="BaseResultMap" type="com.example.demo.model.TestLink" >
    <id column="link_id" property="linkId" jdbcType="INTEGER" />
    <result column="link_name" property="linkName" jdbcType="VARCHAR" />
    <result column="protocol_type" property="protocolType" jdbcType="INTEGER" />
    <result column="stresstest_url" property="stresstestUrl" jdbcType="VARCHAR" />
    <result column="request_type" property="requestType" jdbcType="INTEGER" />
    <result column="content_type" property="contentType" jdbcType="INTEGER" />
    <result column="charset_type" property="charsetType" jdbcType="INTEGER" />
    <result column="testfile_path" property="testfilePath" jdbcType="VARCHAR" />
    <result column="create_time" property="createTime" jdbcType="BIGINT" />
    <result column="modify_time" property="modifyTime" jdbcType="BIGINT" />
  </resultMap>
  <sql id="Base_Column_List" >
    link_id, link_name, protocol_type, stresstest_url, request_type, content_type, charset_type, 
    testfile_path, create_time, modify_time
  </sql>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from t_link
    where link_id = #{linkId,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from t_link
    where link_id = #{linkId,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.example.demo.model.TestLink" >
    insert into t_link (link_id, link_name, protocol_type, 
      stresstest_url, request_type, content_type, 
      charset_type, testfile_path, create_time, 
      modify_time)
    values (#{linkId,jdbcType=INTEGER}, #{linkName,jdbcType=VARCHAR}, #{protocolType,jdbcType=INTEGER}, 
      #{stresstestUrl,jdbcType=VARCHAR}, #{requestType,jdbcType=INTEGER}, #{contentType,jdbcType=INTEGER}, 
      #{charsetType,jdbcType=INTEGER}, #{testfilePath,jdbcType=VARCHAR}, #{createTime,jdbcType=BIGINT}, 
      #{modifyTime,jdbcType=BIGINT})
  </insert>
  <insert id="insertSelective" parameterType="com.example.demo.model.TestLink" >
    insert into t_link
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="linkId != null" >
        link_id,
      </if>
      <if test="linkName != null" >
        link_name,
      </if>
      <if test="protocolType != null" >
        protocol_type,
      </if>
      <if test="stresstestUrl != null" >
        stresstest_url,
      </if>
      <if test="requestType != null" >
        request_type,
      </if>
      <if test="contentType != null" >
        content_type,
      </if>
      <if test="charsetType != null" >
        charset_type,
      </if>
      <if test="testfilePath != null" >
        testfile_path,
      </if>
      <if test="createTime != null" >
        create_time,
      </if>
      <if test="modifyTime != null" >
        modify_time,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="linkId != null" >
        #{linkId,jdbcType=INTEGER},
      </if>
      <if test="linkName != null" >
        #{linkName,jdbcType=VARCHAR},
      </if>
      <if test="protocolType != null" >
        #{protocolType,jdbcType=INTEGER},
      </if>
      <if test="stresstestUrl != null" >
        #{stresstestUrl,jdbcType=VARCHAR},
      </if>
      <if test="requestType != null" >
        #{requestType,jdbcType=INTEGER},
      </if>
      <if test="contentType != null" >
        #{contentType,jdbcType=INTEGER},
      </if>
      <if test="charsetType != null" >
        #{charsetType,jdbcType=INTEGER},
      </if>
      <if test="testfilePath != null" >
        #{testfilePath,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null" >
        #{createTime,jdbcType=BIGINT},
      </if>
      <if test="modifyTime != null" >
        #{modifyTime,jdbcType=BIGINT},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.example.demo.model.TestLink" >
    update t_link
    <set >
      <if test="linkName != null" >
        link_name = #{linkName,jdbcType=VARCHAR},
      </if>
      <if test="protocolType != null" >
        protocol_type = #{protocolType,jdbcType=INTEGER},
      </if>
      <if test="stresstestUrl != null" >
        stresstest_url = #{stresstestUrl,jdbcType=VARCHAR},
      </if>
      <if test="requestType != null" >
        request_type = #{requestType,jdbcType=INTEGER},
      </if>
      <if test="contentType != null" >
        content_type = #{contentType,jdbcType=INTEGER},
      </if>
      <if test="charsetType != null" >
        charset_type = #{charsetType,jdbcType=INTEGER},
      </if>
      <if test="testfilePath != null" >
        testfile_path = #{testfilePath,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null" >
        create_time = #{createTime,jdbcType=BIGINT},
      </if>
      <if test="modifyTime != null" >
        modify_time = #{modifyTime,jdbcType=BIGINT},
      </if>
    </set>
    where link_id = #{linkId,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.example.demo.model.TestLink" >
    update t_link
    set link_name = #{linkName,jdbcType=VARCHAR},
      protocol_type = #{protocolType,jdbcType=INTEGER},
      stresstest_url = #{stresstestUrl,jdbcType=VARCHAR},
      request_type = #{requestType,jdbcType=INTEGER},
      content_type = #{contentType,jdbcType=INTEGER},
      charset_type = #{charsetType,jdbcType=INTEGER},
      testfile_path = #{testfilePath,jdbcType=VARCHAR},
      create_time = #{createTime,jdbcType=BIGINT},
      modify_time = #{modifyTime,jdbcType=BIGINT}
    where link_id = #{linkId,jdbcType=INTEGER}
  </update>
</mapper>